{#
    By default, forms enable client-side validation. This means that you can't
    test the server-side validation errors from the browser. To temporarily
    disable this validation, add the 'novalidate' attribute:

    {{ form_start(form, {attr: {novalidate: 'novalidate'}}) }}
#}

{% if show_confirmation|default(false) %}
    {% set attr = {'data-confirmation': 'true'} %}
    {{ include('blog/_delete_post_confirmation.html.twig') }}
{% endif %}

{{ form_start(form, {attr: attr|default({})}) }}
    {{ form_widget(form) }}
    <div id="dynamic-fields"></div>
    <button type="submit" class="{{ button_css|default("btn btn-primary") }}">
        <i class="fa fa-save" aria-hidden="true"></i> {{ button_label|default('label.create_post'|trans) }}
    </button>

    {% if include_back_to_home_link|default(false) %}
        <a href="{{ path('admin_post_index') }}" class="btn btn-link">
            <i class="fa fa-list-alt" aria-hidden="true"></i> {{ 'action.back_to_list'|trans }}
        </a>
    {% endif %}
{{ form_end(form) }}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.form-schema-selector').on('change', function () {
            var formSchemaId = $(this).val();
            if (!formSchemaId) {
                return;
            }

            $.ajax({
                url: '/pl/admin/form_schema/' + formSchemaId + '.json',  // Calls your action
                method: 'GET',
                success: function (data) {
                    let container = $('#dynamic-fields');
                    container.empty(); // Clear previous fields

                    data.forEach(function (field) {
                        let inputField;
                        // let fieldName = 'post[extra][' + field.name + ']';
                        let fieldName = field.name;
                        // Handle different field types
                        switch (field.type) {
                            case 'textarea':
                                inputField = $('<textarea>')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .attr('placeholder', field.display_name)
                                    .addClass('form-control');
                                break;
                            case 'checkbox':
                                inputField = $('<input>')
                                    .attr('type', 'checkbox')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .addClass('form-check-input');
                                container.append('<label for="' + field.name + '" class="form-check-label">' + field.display_name + '</label>');
                                break;
                            case 'number':
                            case 'cost':
                                inputField = $('<input>')
                                    .attr('type', 'number')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .attr('placeholder', field.display_name)
                                    .attr('step', '0.01')
                                    .addClass('form-control');
                                break;
                            case 'email':
                                inputField = $('<input>')
                                    .attr('type', 'email')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .attr('placeholder', field.display_name)
                                    .addClass('form-control');
                                break;
                            case 'url':
                                inputField = $('<input>')
                                    .attr('type', 'url')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .attr('placeholder', field.display_name)
                                    .addClass('form-control');
                                break;
                            default:
                                inputField = $('<input>')
                                    .attr('type', 'text')
                                    .attr('name', fieldName)
                                    .attr('id', field.name)
                                    .attr('placeholder', field.display_name)
                                    .addClass('form-control');
                        }

                        if (field.required) {
                            inputField.attr('required', 'required');
                        }

                        container.append('<label for="' + field.name + '">' + field.display_name + '</label>');
                        container.append(inputField);
                    });
                }
            });
        });
    });
</script>