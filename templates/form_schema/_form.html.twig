{{ form_start(form) }}
<div id="{{ form.formFields.vars.id }}" data-prototype="{{ form_widget(form.formFields.vars.prototype)|e('html_attr') }}">
    {% for field in form.formFields %}
        <div class="collection-item">
            {{ form_row(field) }}
            <button type="button" class="btn btn-danger remove-collection-item">Remove</button>
        </div>
    {% endfor %}
</div>
<button class="btn btn-primary">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}



<script>
    document.addEventListener('DOMContentLoaded', function () {
        const collectionHolder = document.querySelector('#{{ form.formFields.vars.id }}');
        const addButton = document.createElement('button');
        addButton.type = 'button';
        addButton.classList.add('btn', 'btn-success', 'add-collection-item');
        addButton.innerText = 'Add Field';

        collectionHolder.after(addButton);

        let index = collectionHolder.children.length;

        addButton.addEventListener('click', function () {
            const prototype = collectionHolder.dataset.prototype.replace(/__name__/g, index);
            const newElement = document.createElement('div');
            newElement.innerHTML = prototype;

            // Add remove button to the new field
            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.classList.add('btn', 'btn-danger', 'remove-collection-item');
            removeButton.innerText = 'Remove';
            removeButton.addEventListener('click', function () {
                newElement.remove();
            });

            newElement.appendChild(removeButton);
            collectionHolder.appendChild(newElement);
            index++;
        });

        // Add remove button to existing fields
        document.querySelectorAll('.remove-collection-item').forEach(btn => {
            btn.addEventListener('click', function () {
                btn.closest('.collection-item').remove();
            });
        });
        document.querySelector('.camel-case-field').addEventListener('input', function () {
            let value = this.value;
            value = value.replace(/[_-]/g, ' '); // Replace underscores and dashes with spaces
            value = value.replace(/\s(.)/g, function(match) {
                return match.toUpperCase();
            }); // Capitalize letters after spaces
            value = value.replace(/\s/g, ''); // Remove spaces
            value = value.charAt(0).toLowerCase() + value.slice(1); // Ensure first letter is lowercase
            this.value = value;
        });
    });
</script>
